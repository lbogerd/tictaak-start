import { useEffect, useState } from "react"

/**
 * This component is used to display the version of the app. Only runs on client.
 * It fetches the version from the version.json file in the public directory.
 * The version file is generated by the prebuild script.
 */
type VersionInfo = {
	package: string
	sha: string
	tag: string | null
	dirty: boolean
	commitTime: string
	buildTime: string
	mode: string
}

declare const __APP_VERSION__: string
declare const __APP_GIT_SHA__: string
declare const __APP_GIT_TAG__: string | null
declare const __APP_BUILD_TIME__: string
declare const __APP_COMMIT_TIME__: string
declare const __APP_DIRTY__: boolean
declare const __APP_MODE__: string

export default function Version() {
	const [info, setInfo] = useState<VersionInfo | null>(() => {
		// Try build-time constants first (they exist both dev & prod)
		if (typeof __APP_GIT_SHA__ !== "undefined") {
			return {
				package: __APP_VERSION__,
				sha: __APP_GIT_SHA__,
				tag: __APP_GIT_TAG__,
				dirty: __APP_DIRTY__,
				commitTime: __APP_COMMIT_TIME__,
				buildTime: __APP_BUILD_TIME__,
				mode: __APP_MODE__,
			}
		}
		return null
	})

	useEffect(() => {
		if (info) return
		fetch("/version.json")
			.then((r) => r.json())
			.then((data) => setInfo(data))
			.catch(() => {})
	}, [info])

	if (!info) return null

	const ident = info.sha || info.tag || info.buildTime
	const short = `${info.package} - ${ident}${info.dirty ? "+" : ""}`
	const title = `version ${info.package}\nsha ${info.sha || "(none)"}${info.dirty ? " (dirty)" : ""}\ntag ${info.tag ?? "(none)"}\nmode ${info.mode}\ncommit ${info.commitTime || "(n/a)"}\nbuild ${info.buildTime}`

	return (
		<div className="mt-4 text-center text-gray-500 text-xs" title={title}>
			{short}
		</div>
	)
}
